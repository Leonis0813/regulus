<%= javascript_tag do %>
$('#rate').html('<svg width="100%" height="620px" id="graph"></svg>');

var dataSet = <%== @rates.to_json %>
var min = <%= @rates.map {|rate| rate[:low] }.sort.first %>
var max = <%= @rates.map {|rate| rate[:high] }.sort.last %>

var xScale = d3.time.scale()
  .domain([
    new Date('<%= (Time.parse(@rates.last[:time]) + 9 * 60 * 60).strftime('%Y-%m-%d %H:%M:%S') %>'),
    new Date('<%= (Time.parse(@rates.first[:time]) + 9 * 60 * 60).strftime('%Y-%m-%d %H:%M:%S') %>')
  ])
  .range([40, 1228]);

var yScale = d3.scale.linear()
  .domain([min, max])
  .range([500, 0]);

var line = d3.svg.line()
  .x(function(d) {return 1400 - (d[0] * 12 + 100) + 3;})
  .y(function(d) {return 50 + (500 * (max-d[1]))/(max-min);});

d3.select("#graph")
  .append("g")
  .attr("class", "axis")
  .attr("transform", "translate(75, 580)")
  .call(
    d3.svg.axis()
      .scale(xScale)
      .orient("bottom")
      .innerTickSize(-530)
      .outerTickSize(2)
      .tickPadding(10)
      .ticks(15)
      .tickFormat(d3.time.format('%H:%M'))
  )

d3.select("#graph")
  .append("g")
  .attr("class", "axis")
  .attr("transform", "translate(75, 50)")
  .call(
    d3.svg.axis()
      .scale(yScale)
      .orient("left")
      .innerTickSize(-1228)
      .outerTickSize(0)
      .tickPadding(10)
  )

d3.select("#graph")
  .selectAll("path")
  .data(dataSet)
  .enter()
  .append("path")
  .attr("d", function(d, i){
    return line([[i, d.high], [i, d.low]]);
  })
  .attr("stroke", "black")

d3.select("#graph")
  .selectAll("rect")
  .data(dataSet)
  .enter()
  .append("rect")
  .attr("x", function(d, i){
    return 1400 - (i * 12 + 100);
  })
  .attr("y", function(d, i){
    if(d.close > d.open)
      return 50 + (500 * (max-d.close))/(max-min);
    else
      return 50 + (500 * (max-d.open))/(max-min);
  })
  .attr("width", "6px")
  .attr("height", function(d, i){
    if(d.close == d.open)
      return "1px";
    else
      return (500 * Math.abs(d.close - d.open))/(max-min) + "px";
  })
  .style("fill", function(d, i){
    if(d.close > d.open)
      return "red";
    else if(d.close < d.open)
      return "blue";
    else
      return "black";
  })
  .on("mouseover", function(d){
    d3.select("#graph")
      .append("rect")
      .attr("class", "info")
      .attr("x", d3.mouse(this)[0] + 10)
      .attr("y", d3.mouse(this)[1] - 100)
      .attr("width", "140px")
      .attr("height", "100px")
      .attr("stroke", "black")
      .attr("fill", "white")
    d3.select("#graph")
      .append("text")
      .attr("class", "info")
      .text("始値: " + d.open)
      .attr("x", d3.mouse(this)[0] + 18)
      .attr("y", d3.mouse(this)[1] - 78)
      .attr("stroke", "black")
    d3.select("#graph")
      .append("text")
      .attr("class", "info")
      .text("終値: " + d.close)
      .attr("x", d3.mouse(this)[0] + 18)
      .attr("y", d3.mouse(this)[1] - 56)
      .attr("stroke", "black")
    d3.select("#graph")
      .append("text")
      .attr("class", "info")
      .text("高値: " + d.high)
      .attr("x", d3.mouse(this)[0] + 18)
      .attr("y", d3.mouse(this)[1] - 34)
      .attr("stroke", "black")
    d3.select("#graph")
      .append("text")
      .attr("class", "info")
      .text("安値: " + d.low)
      .attr("x", d3.mouse(this)[0] + 18)
      .attr("y", d3.mouse(this)[1] - 12)
      .attr("stroke", "black")
  })
  .on("mouseout", function(){
    d3.selectAll(".info")
      .remove()
  })
<% end %>
